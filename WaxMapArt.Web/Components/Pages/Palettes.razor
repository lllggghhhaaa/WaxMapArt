@page "/palettes"
@attribute [Authorize]
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<DatabaseContext> DbContextFactory
@inject NavigationManager NavigationManager

<div class="container mx-auto px-4 py-6">
    <h1 class="text-3xl font-semibold mb-4">Lista de Paletas</h1>

    <button class="bg-green-500 text-white px-4 py-2 rounded-md mb-4" @onclick="NavigateToAddPalette">
        Adicionar Paleta
    </button>

    @if (_palettes is null)
    {
        <div class="text-center text-gray-500">
            <p>Carregando paletas...</p>
        </div>
    }
    else if (_palettes.Count == 0)
    {
        <div class="text-center text-gray-500">
            <p>Nenhuma paleta encontrada.</p>
        </div>
    }
    else
    {
        <div class="overflow-x-auto">
            <table class="min-w-full bg-white rounded-lg border border-separate border-tools-table-outline border-gray-200">
                <thead>
                    <tr class="bg-gray-100">
                        <th class="text-center px-4 py-2 text-gray-600 font-semibold">Nome</th>
                        <th class="text-center px-4 py-2 text-gray-600 font-semibold">Blocos</th>
                        <th class="text-center px-4 py-2 text-gray-600 font-semibold">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var palette in _palettes)
                    {
                        <tr class="border-b hover:bg-gray-50">
                            <td class="px-4 py-2 text-center">@palette.Name</td>
                            <td class="px-4 py-2 justify-center flex flex-row">
                                @foreach (var block in palette.Blocks)
                                {
                                    <div class="flex justify-center items-center">
                                        <img src="@block.ImageUrl" alt="@block.MinecraftId" title="@block.MinecraftId" class="w-10 h-10 object-cover rounded-md border border-gray-300" />
                                    </div>
                                }
                            </td>
                            <td class="px-4 py-2 text-center">
                                <button class="text-blue-500 hover:text-blue-700" @onclick='() => NavigationManager.NavigateTo($"/palette/{palette.Id}")'>
                                    <i class="text-2xl ri-pencil-line" title="Editar"></i>
                                    <span>Editar</span>
                                </button>
                                <button class="text-red-500 hover:text-red-700 ml-4" @onclick="() => DeletePalette(palette.Id)">
                                    <i class="text-2xl ri-delete-bin-2-line" title="Deletar"></i>
                                    <span>Deletar</span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Palette>? _palettes = [];

    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = await DbContextFactory.CreateDbContextAsync();
        _palettes = await dbContext.Palettes.Include(p => p.Blocks.OrderBy(block => block.MapId)).ToListAsync();
    }

    private async Task DeletePalette(Guid paletteId)
    {
        await using var dbContext = await DbContextFactory.CreateDbContextAsync();
        var palette = await dbContext.Palettes.FindAsync(paletteId);
        if (palette is not null)
        {
            dbContext.Palettes.Remove(palette);
            await dbContext.SaveChangesAsync();
            _palettes = await dbContext.Palettes.Include(p => p.Blocks).ToListAsync();
        }
    }

    private void NavigateToAddPalette()
    {
        NavigationManager.NavigateTo("/palette");
    }
}
